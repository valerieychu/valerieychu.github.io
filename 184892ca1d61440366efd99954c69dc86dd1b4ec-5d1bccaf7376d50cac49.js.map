{"version":3,"file":"184892ca1d61440366efd99954c69dc86dd1b4ec-5d1bccaf7376d50cac49.js","mappings":"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","sources":["webpack://valerieychu.github.io/./src/styles/header.less?1c7a","webpack://valerieychu.github.io/./src/pages/header.js","webpack://valerieychu.github.io/./src/images/valeriechu.png","webpack://valerieychu.github.io/./src/pages/home.js","webpack://valerieychu.github.io/./src/images/divider.svg","webpack://valerieychu.github.io/./src/styles/home.less","webpack://valerieychu.github.io/./src/styles/global.less","webpack://valerieychu.github.io/./src/styles/home.less?0c7f","webpack://valerieychu.github.io/./src/styles/global.less?cafe","webpack://valerieychu.github.io/./src/styles/header.less"],"sourcesContent":["import api from \"!../../node_modules/gatsby/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/gatsby/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!./header.less\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { useEffect, useState } from 'react';\nimport '../styles/header.less';\nimport { navigate } from 'gatsby';\n\nconst Header = () => {\n  return (\n    <header className='header'>\n      <div className='header-name-position'>\n        <button className='header-name' onClick={() => navigate('/')}>\n          Valerie Chu\n        </button>\n      </div>\n      <div className='header-buttons'>\n        <div className='dropdown'>\n          <button className='work' onClick={() => navigate('/work')}>\n            Work\n          </button>\n          <div className='dropdown-content'>\n            <button onClick={() => navigate('/worksamples/worksample-scoreboard')}>\n              Scoreboard Project\n            </button>\n            {/* Add more items here */}\n          </div>\n        </div>\n        <button\n          className='storytelling'\n          onClick={() => navigate('/storytelling')}>\n          Storytelling\n        </button>\n        <button className='me' onClick={() => navigate('/about')}>\n          Me\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/valeriechu-198d93b95f4baa21ed6bf451643250b6.png\";","import React from 'react';\nimport '../styles/global.less';\nimport '../styles/home.less';\nimport image from '../images/valeriechu.png';\nimport divider from '../images/divider.svg';\nimport Header from './header';\nimport Footer from './footer';\n\nconst Home = () => {\n  return (\n    <>\n      {/* <Header /> */}\n      {/* Intro */}\n      {/* Intro */}\n      {/* Intro */}\n      <div className='intro'>\n        <div className='centered-text'>\n          <h1 className='h1' style={{ marginBottom: '1rem' }}>\n            Hi! I'm Valerie and I love storytelling.\n          </h1>\n          <h2 className='h2'>\n            <span\n              className='heart'\n              style={{ color: '#b76e79', fontSize: '16px' }}>\n              &#9829;\n            </span>{' '}\n            Data + Design + Code{' '}\n            <span\n              className='heart'\n              style={{ color: '#b76e79', fontSize: '16px' }}>\n              &#9829;\n            </span>\n          </h2>\n          <h2 className='paragraph' style={{ margin: '1rem 0' }}>\n            <em>~ Creating digital products that tell a story ~</em>\n            {/* ~ Creating digital products that tell a story ~ */}\n          </h2>\n          <h2 className='paragraph'>\n            Currently, I'm interning on NASA's Aerosciences Evaluation and Test\n            Capabilities team, where I focus on tracking our wind tunnel tests.\n            I'm building a landing page that automatically updates with data\n            visualizations, issues and highlights based on reports facility\n            managers send in from NASA's twelve wind tunnels. Essentially, I'm\n            doing a combination of software development, UI/UX, data analytics\n            and data visualization.\n          </h2>\n          <h2 className='paragraph'>\n            I'm a three-time NASA intern, a former San Francisco Chronicle\n            digital design/development intern, and a former freelance\n            Congressional and White House photographer/reporter. I've loved\n            every internship experience I've had so far, and I'm currently\n            looking for a place where I can work with data to design and code\n            digital products that tell a story.\n          </h2>\n        </div>\n        <img className='image' src={image} alt='Image of Valerie Chu' />\n      </div>\n      <img src={divider} alt='divider' className='divider' />\n      <div className='centered-text'>\n        <h3 className='h3'>A Quick Note</h3>\n        <p className='paragraph'>\n          Hi! Thank you so much for checking out my website!\n        </p>\n        <p className='paragraph'>\n          Before you go further, I just want to note that this website is\n          currently still under development. After you've visited the Select\n          Works section located on this home page, to see more of my work,\n          please visit my previous website.\n        </p>\n        <button\n          className='view-this-project'\n          style={{ marginRight: '1rem' }}\n          onClick={() =>\n            window.open('https://valerieychu.myportfolio.com/', '_blank')\n          }>\n          My previous website\n        </button>\n      </div>\n\n      <img src={divider} alt='divider' className='divider' />\n      {/* Selected Works */}\n      {/* Selected Works */}\n      {/* Selected Works */}\n      <div className='centered-text'>\n        <h3 className='h3'>Select Works</h3>\n\n        {/* Scoreboard Project */}\n        {/* Scoreboard Project */}\n        {/* Scoreboard Project */}\n        <h4 className='h4'>San Francisco Chronicle â€” Scoreboard Project</h4>\n        <p className='paragraph'>\n          The San Francisco Chronicle published two photo stories that portrayed\n          key moments from the Golden State Warriors' games in the first round\n          then the semifinals of the NBA playoffs. Since each story featured\n          photos taken during the entire round (ie. multiple games), we wanted\n          to allow readers to visually track which game they're looking at. As\n          the designer/developer for the project, I created a custom scoreboard\n          component.\n        </p>\n\n        <p className='paragraph'>\n          {/* <span style={{ fontWeight: 'bold' }}>Tools used:</span>  */}\n          <i>Tools used: </i>\n          React, Figma, ArchieML, HTML, CSS, JavaScript\n        </p>\n\n        <p className='paragraph'>\n          <i>Process: </i>\n          When creating the scoreboard component, I wanted to start by\n          considering the history of old-school sports design. My mentor, Alex\n          Fong, has a collection of newspaper designs from people including\n          Vince Chiaramonte, Brian Gross and Wayne Kamidoi. After looking\n          through some of their work as well as that of other designers, I began\n          to pick up on particular ways of displaying fundamental sports\n          information â€” with scoreboards being one such idea. Then my goal\n          became to take the inspiration I gained from print sports design and\n          make those ideas digitally presentable. I used Figma to design\n          multiple scoreboard options, ultimately landing on one that could be\n          reused for other sports including the WNBA, MLB and NFL.\n        </p>\n        <p className='paragraph'>\n          The scoreboardâ€™s dynamic design adjusts to mobile and desktop devices,\n          and allows editors and writers to simply edit an ArchieML tag in\n          Google Docs to change scoreboard components â€” team names, score and\n          game number â€” without needing access to the code or coding skills. The\n          scoreboard then auto-designs itself.\n        </p>\n        <p className='paragraph'>\n          This scoreboard component was deployed for two Golden State Warriors\n          photo stories. Since each photo story was published immediately after\n          each NBA round, I utilized the scoreboard component and also\n          designed/placed the game photos into each story under deadline. The\n          scoreboard component exists as a San Francisco Chronicle component and\n          will be reused for other sports we cover in the future.\n        </p>\n\n        <button\n          className='view-this-project'\n          style={{ marginRight: '1rem' }}\n          onClick={() =>\n            window.open(\n              'https://www.sfchronicle.com/projects/2025/warriors-rockets-nba-playoffs/',\n              '_blank',\n            )\n          }>\n          View this project (1st story)\n        </button>\n\n        <button\n          className='view-this-project'\n          onClick={() =>\n            window.open(\n              'https://www.sfchronicle.com/projects/2025/warriors-timberwolves-nba-playoffs/',\n              '_blank',\n            )\n          }>\n          View this project (2nd story)\n        </button>\n\n        <video\n          width='640'\n          height='427'\n          controls\n          // autoPlay\n          muted\n          loop\n          style={{\n            maxWidth: '100%',\n            borderRadius: '8px',\n            marginBottom: '1rem',\n          }}>\n          <source src='/scoreboard-component.mp4' type='video/mp4' />\n          Your browser does not support the video tag.\n        </video>\n\n        {/* Investigative Project */}\n        {/* Investigative Project */}\n        {/* Investigative Project */}\n        <h4 className='h4'>San Francisco Chronicle â€” Investigative Series</h4>\n        <p className='paragraph'>\n          [Story not yet published] I worked from conception to execution on a\n          long-term investigative project that will be published later in 2025.\n        </p>\n\n        <p className='paragraph'>\n          {/* <span style={{ fontWeight: 'bold' }}>Tools used:</span>  */}\n          <i>Tools used: </i>\n          React, Figma, GSAP, Illustrator, ArchieML, HTML, CSS, JavaScript\n        </p>\n\n        <p className='paragraph'>\n          <i>Process: </i>\n          When creating this project, I knew I had to look at it from both a\n          product and storytelling perspective. It was a six part series\n          consisting of over 5,000 words per part, so it was critical to keep\n          readers engaged. With this in mind, and with the full creative control\n          my mentor gave me over the project, I began designing and coding it.\n          In particular, I focused on making two components.\n        </p>\n        <p className='paragraph'>\n          The first was animating text messages. Text messages between the two\n          main characters in the story were central to the storytelling process\n          of this investigative piece, so I wanted to showcase the text messages\n          somehow in each part of the series. I started by texting back and\n          forth with my mentor, then studied how the text messages were sent and\n          appeared. (One interesting thing I never noticed before was that when\n          one person sends multiple texts, only the last text bubble gets an\n          attribution arrow.) After looking through numerous photos on Google\n          for additional text message bubble inspiration, I started designing a\n          layout in InDesign then moved it to Figma when I decided I wanted to\n          animate the text messages. After setting up the project within the\n          Chronicle dev rig and getting the story working with ArchieML, I\n          applied the typefaces, font colors and subtle gray-to-black background\n          gradient to the project. Then I began animating the text messages\n          using GSAP. It took a lot of YouTube videos, Googling, trial and\n          error, and talking out my process with my mentor â€” but I overcame the\n          learning curve and put together the animations! Along the way, I also\n          learned how to use Illustrator to make SVGs work for the text bubble\n          attributions and dived into dozens of niche Stack Overflow posts about\n          animating using GSAP with React.\n        </p>\n        <p className='paragraph'>\n          The second main element of the investigative project I focused on was\n          a way to keep readers engaged with the article. When I first read a\n          draft of the series in March, it was more than 30,000 words and took\n          me 1 hour 45 minutes to finish reading from start to finish without\n          breaks. While that was because I had the time to read it as part of\n          working on its design/development, I knew most people wouldnâ€™t finish\n          reading the series in one continuous sitting. I needed to figure out\n          how readers would engage with the series, then incorporate both\n          storytelling features and product design to keep them hooked on the\n          story. I started by developing user personas with our audience in\n          mind, which comes from a wide range of backgrounds and with different\n          daily reading habits. The most viable idea emerged as a bookmark modal\n          â€” when the reader closes the tab or the app, their progress will be\n          automatically saved. No matter which device they continue reading on,\n          the page will resume from where they left off and a bookmark modal\n          will appear, offering a brief summary of the story so far. I designed\n          the bookmark modal and the user flow diagram for it using Figma. I\n          pulled the data for the bookmark modal (ex. Summary hed and summary\n          text applicable to each 25% of the story) from Google Sheets using\n          ArchieML. I played around with different ways of using autosave â€”\n          first, I tried calculating the scroll percentage and anchoring the\n          bookmark modal to certain percentages. Then my mentor and I decided to\n          make it more flexible, so we changed up our React hooks and used\n          BlueConic to create the autosave feature.\n        </p>\n        <p className='paragraph'>\n          I also prioritized both product design and accessibility when creating\n          the bookmark modal. The Continue Reading button on the left side of\n          the modal closes the bookmark modal and allows readers to pick up\n          where they left off. The Start Over button on the right side of the\n          modal deletes the bookmark/autosave progress and starts the reader\n          back at the top of the story (which is useful if more than one person\n          shares the same San Francisco Chronicle account). Itâ€™s also possible\n          for the reader to close the modal through clicking on the Continue\n          Reading button, the X button, Escape key or anywhere outside of the\n          modal itself. All San Francisco Chronicle products are also coded with\n          mobile-first design, all HTML tags are semantic, and all color\n          contrast and font sizes are chosen to be easily understood whether the\n          reader is using a screen reader or has color blindness.\n        </p>\n        <p className='paragraph'>\n          By the end of my internship, I had used far more useStates,\n          useEffects, useRefs and useContexts than I ever anticipated. Through\n          working on this project from conception to execution, I gained a deep\n          understanding of user design, product design and web\n          design/development, allowing me to help bring this investigative\n          series to life.\n        </p>\n\n        <button\n          className='view-this-project'\n          style={{ marginRight: '1rem' }}\n          onClick={() => window.open('https://www.sfchronicle.com/', '_blank')}>\n          This investigative story will be published later in 2025\n        </button>\n\n        {/* LA/Bay Area Protests Project */}\n        {/* LA/Bay Area Protests Project */}\n        {/* LA/Bay Area Protests Project */}\n        <h4 className='h4'>\n          San Francisco Chronicle â€” Reusable video components\n        </h4>\n        <p className='paragraph'>\n          San Francisco Chronicle photographers captured demonstrations\n          throughout the Bay Area and Los Angeles of people protesting President\n          Donald Trumpâ€™s immigration policies and the military parade held on\n          his birthday. We already had a photo component that enabled us to to\n          add and design photos in the template I set up for this project, but\n          we didn't have a compatible short video component. Under breaking news\n          deadline, I took a horizontal video component from an existing code\n          base I hadnâ€™t worked with before and adapted it to this particular\n          project template.\n        </p>\n\n        <p className='paragraph'>\n          {/* <span style={{ fontWeight: 'bold' }}>Tools used:</span>  */}\n          <i>Tools used: </i>\n          React, ArchieML, HTML, CSS, JavaScript\n        </p>\n\n        <p className='paragraph'>\n          <i>Process: </i>\n          Because this story was published under deadline, after setting up the\n          storyâ€™s custom build, I immediately started working with people from\n          the photo and video teams to lay out and design the photos in this\n          story using the same custom ArchieML tags as other Chronicle photo\n          stories (ex. as seen in the photos in the scoreboard project). But we\n          had a few videos that captured key scenes at the protests â€” and we\n          didnâ€™t have an existing video component that worked for this template\n          â€” so creating that became my main focus during the crunch period of\n          assembling this story.\n        </p>\n        <p className='paragraph'>\n          In a previous Chronicle project, we made a vertical video component\n          that drew data from a video subsheet within a Google Sheet, but it\n          wasn't compatible with ArchieML/Google Docs. I imported several files\n          from that project into this one; edited them to make them all work\n          with ArchieML/Google Docs; changed the names of the files and\n          components to be more intuitive (ex. interviewvideo.js became\n          verticalvideohasaudio.js); renamed unintuitively named components and\n          relinked them; changed the color of the scrub bar to our brand color;\n          and changed the design of the video captions to be text width and in\n          the right typeface.\n        </p>\n        <p className='paragraph'>\n          Ultimately, I ended up creating a horizontal video component, a\n          vertical component without audio, and a vertical component with audio\n          â€” adapted under deadline from an existing codebase I hadnâ€™t worked\n          with before, and consistent with Chronicle video styles. Featuring\n          photos/videos taken on Sunday, June 8 and updated daily over the\n          course of a week, this photo/video story came in second for our web\n          traffic on Saturday and took the lead on the following Sunday.\n        </p>\n\n        <button\n          className='view-this-project'\n          style={{ marginRight: '1rem' }}\n          onClick={() =>\n            window.open(\n              'https://www.sfchronicle.com/projects/2025/ice-california-protest-photos/',\n              '_blank',\n            )\n          }>\n          View this project\n        </button>\n\n        <iframe\n          width='640'\n          height='360'\n          src='https://www.youtube.com/embed/oPsJiwtwxb4?si=LygNLsmEO-YP3Szz'\n          title='Photos and video show No Kings, ICE protests in Bay Area, Los Angeles'\n          frameborder='0'\n          allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share'\n          referrerpolicy='strict-origin-when-cross-origin'\n          style={{\n            maxWidth: '100%',\n            marginBottom: '1rem',\n          }}\n          allowfullscreen></iframe>\n      </div>\n      {/* <Footer /> */}\n    </>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/divider-daf7687b52bda6df3f5043749b3701fd.svg\";","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/gatsby/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".intro {\\n  max-width: 672px;\\n  padding: 1.5rem 1rem 0rem;\\n  text-align: center;\\n  margin: 0 auto;\\n}\\n@media (min-width: 672px) {\\n  .intro {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: space-between;\\n  }\\n}\\n.image {\\n  height: 15rem;\\n  width: 15rem;\\n  margin: 1rem;\\n}\\n\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/gatsby/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".centered-text {\\n  max-width: 672px;\\n  margin: 0 auto;\\n  padding: 0 1rem;\\n}\\n.h1 {\\n  font-family: 'Amiri', 'Crimson Text', Times New Roman, serif;\\n  font-size: 2.25rem;\\n  line-height: 2.5rem;\\n  text-align: left;\\n  width: calc(100% - 2rem);\\n  margin: 0.5rem 0;\\n}\\n.h2 {\\n  font-family: 'Open Sans', 'Roboto', Arial, sans-serif;\\n  font-size: 1.25rem;\\n  line-height: 1.65rem;\\n  font-weight: 400;\\n  text-align: left;\\n  margin: 0.5rem 0;\\n  width: calc(100% - 2rem);\\n}\\n.h3 {\\n  font-family: 'Amiri', 'Crimson Text', Times New Roman, serif;\\n  font-size: 2rem;\\n  line-height: 1.75rem;\\n  text-align: left;\\n  width: calc(100% - 2rem);\\n  margin: 1rem 0;\\n}\\n.h4 {\\n  font-family: 'Open Sans', 'Roboto', Arial, sans-serif;\\n  font-size: 1.25rem;\\n  line-height: 1.5rem;\\n  text-align: left;\\n  width: calc(100% - 2rem);\\n  margin: 1rem 0;\\n}\\n.paragraph {\\n  font-family: 'Open Sans', 'Roboto', Arial, sans-serif;\\n  font-size: 1rem;\\n  line-height: 1.25rem;\\n  font-weight: 400;\\n  text-align: left;\\n  margin: 1.25rem 0;\\n  width: calc(100% - 2rem);\\n}\\n.divider {\\n  display: block;\\n  width: 100%;\\n  max-width: 672px;\\n  margin: 1rem auto;\\n}\\n.view-this-project {\\n  font-family: 'Open Sans', 'Roboto', Arial, sans-serif;\\n  font-size: 0.95rem;\\n  line-height: 1rem;\\n  background-color: white;\\n  font-weight: 400;\\n  padding: 0.75rem;\\n  background: white;\\n  text-align: center;\\n  margin-bottom: 1rem;\\n  border-radius: 10px;\\n  border: 1px solid black;\\n  transition: color 0.2s ease-in-out, border-color 0.2s ease-in-out;\\n}\\n.view-this-project:hover {\\n  color: #b76e79;\\n  cursor: pointer;\\n  border-color: #b76e79;\\n}\\nhtml,\\nbody,\\n#___gatsby,\\n#gatsby-focus-wrapper {\\n  height: 100%;\\n  margin: 0;\\n}\\n.page-container {\\n  min-height: 100%;\\n  display: flex;\\n  flex-direction: column;\\n}\\nmain {\\n  flex: 1;\\n}\\n\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../node_modules/gatsby/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/gatsby/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!./home.less\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../node_modules/gatsby/node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../node_modules/gatsby/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[12].use[1]!../../node_modules/less-loader/dist/cjs.js??ruleSet[1].rules[12].use[2]!./global.less\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","// Imports\nimport ___CSS_LOADER_API_IMPORT___ from \"../../node_modules/gatsby/node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".header {\\n  padding: 1.5em 1rem 1.25rem;\\n  background: white;\\n  border-bottom: 1px solid black;\\n  text-align: center;\\n  margin-bottom: 1rem;\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n.header button {\\n  transition: color 0.2s ease-in-out;\\n}\\n.header button:hover {\\n  color: #b76e79;\\n  cursor: pointer;\\n}\\n.header-name-position {\\n  text-align: left;\\n  margin: 0.5rem 0;\\n}\\n.header-name {\\n  font-family: 'Amiri', 'Crimson Text', Times New Roman, serif;\\n  font-size: 1.5rem;\\n  line-height: 1.5rem;\\n  background-color: white;\\n  border: none;\\n  font-weight: 600;\\n}\\n.work,\\n.storytelling,\\n.me {\\n  font-family: 'Open Sans', 'Roboto', Arial, sans-serif;\\n  font-size: 1rem;\\n  line-height: 1.25rem;\\n  background-color: white;\\n  border: none;\\n  font-weight: 400;\\n}\\n.header-buttons {\\n  text-align: right;\\n  display: flex;\\n  gap: 1rem;\\n  font-size: 1.5rem;\\n}\\n.dropdown {\\n  position: relative;\\n  display: inline-block;\\n}\\n.dropdown .dropdown-content {\\n  display: none;\\n  position: absolute;\\n  right: 0;\\n  top: 100%;\\n  background-color: white;\\n  min-width: 160px;\\n  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\\n  z-index: 2;\\n  padding: 0.25rem;\\n}\\n.dropdown .dropdown-content button {\\n  font-family: 'Open Sans', 'Roboto', Arial, sans-serif;\\n  width: 100%;\\n  padding: 10px;\\n  background: none;\\n  border: none;\\n  text-align: center;\\n  transition: color 0.2s ease-in-out, border-color 0.2s ease-in-out;\\n  cursor: pointer;\\n}\\n.dropdown .dropdown-content button:hover {\\n  color: #b76e79;\\n  border-color: #b76e79;\\n}\\n.dropdown:hover .dropdown-content {\\n  display: block;\\n}\\n\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n"],"names":["options","locals","Header","React","className","onClick","navigate","Home","style","marginBottom","color","fontSize","margin","src","image","alt","divider","marginRight","window","open","width","height","controls","muted","loop","maxWidth","borderRadius","type","title","frameborder","allow","referrerpolicy","allowfullscreen","___CSS_LOADER_EXPORT___","i","push","module","id"],"sourceRoot":""}